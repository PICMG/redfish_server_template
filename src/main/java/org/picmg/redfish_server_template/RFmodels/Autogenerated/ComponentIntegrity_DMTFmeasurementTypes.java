package org.picmg.redfish_server_template.RFmodels.Autogenerated;

import com.fasterxml.jackson.annotation.JsonValue;

import com.fasterxml.jackson.annotation.JsonCreator;

/**
 * Gets or Sets ComponentIntegrity_v1_2_1_DMTFmeasurementTypes
 */
public enum ComponentIntegrity_DMTFmeasurementTypes   {
  
  IMMUTABLEROM("ImmutableROM"),
  
  MUTABLEFIRMWARE("MutableFirmware"),
  
  HARDWARECONFIGURATION("HardwareConfiguration"),
  
  FIRMWARECONFIGURATION("FirmwareConfiguration"),
  
  MUTABLEFIRMWAREVERSION("MutableFirmwareVersion"),
  
  MUTABLEFIRMWARESECURITYVERSIONNUMBER("MutableFirmwareSecurityVersionNumber"),
  
  MEASUREMENTMANIFEST("MeasurementManifest");

  private String value;

  ComponentIntegrity_DMTFmeasurementTypes(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static ComponentIntegrity_DMTFmeasurementTypes fromValue(String value) {
    for (ComponentIntegrity_DMTFmeasurementTypes b : ComponentIntegrity_DMTFmeasurementTypes.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

